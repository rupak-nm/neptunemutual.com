---
import Button from "./buttons/Button.astro";

import { getPagination } from "../../util/pagination";
import { normalizeUrl } from "../../util/url";
import { BlogOrPressroom } from "../../types/enum";

interface Props {
  type?: BlogOrPressroom;
  tag?: Tag;
  totalPages?: number;
  currentPage?: number;
  className?: string;
}

const { type, tag, totalPages, currentPage, className } = Astro.props;

const prefix = [null, type, tag?.slug ? "tag" : null, tag?.slug, "page"]
  .filter((x) => !!x)
  .join("/");

const postfix = tag?.slug ? "#" + tag.slug : "";

const { previous, pages, next } = getPagination(totalPages, currentPage);
const previousHref = previous ? `/${prefix}/${previous}${postfix}` : undefined;
const nextHref = next ? `/${prefix}/${next}${postfix}` : undefined;

const t = (x: string): string => x;
---

<div class={`ui pagination${className ? " " + className : ""}`}>
  <div class="container">
    <Button
      type={"anchor"}
      classname={"previous page"}
      href={type ? normalizeUrl(previousHref) : "#"}
      variant={"link-color"}
      iconLeading="arrow-left"
      disabled={parseInt((currentPage || 0).toString()) <= 1}
    >
      {t("Previous")}
    </Button>

    <div class="page numbers">
      {
        pages &&
          pages.map((page) => {
            return page ? (
              <Button
                classname={
                  parseInt((currentPage || 0).toString()) === page
                    ? "active page"
                    : "page"
                }
                type={"anchor"}
                href={`/${prefix}/${page}${postfix}`}
                variant={"link-color"}
              >
                {page}
              </Button>
            ) : (
              <span class="continues"> ... </span>
            );
          })
      }
    </div>

    <Button
      type={"anchor"}
      classname={"next page"}
      href={type ? normalizeUrl(nextHref) : "#"}
      variant={"link-color"}
      iconTrailing="arrow-right"
      disabled={parseInt((currentPage || 0).toString()) ===
        parseInt((totalPages || 0).toString())}
    >
      {t("Next")}
    </Button>
  </div>
</div>
