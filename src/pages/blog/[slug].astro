---
import BlogPost from "../../views/blog-post/BlogPost.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import Seo from "../../components/Seo.astro";

import { getRelatedPosts } from "../../../util/getRelated";
import styles from "./slug.scss?inline";
import * as api from "../../../service/api";
import * as dns from "../../../util/dns";
import { Api } from "../../../types/enum";

interface Props {
  post: Article;
  related: Article[];
}

export async function getStaticPaths() {
  const posts = await api.getEnumerable<Article>(Api.Blog, 1000, 0);

  return posts.map((post) => {
    return {
      params: { slug: post.slug },
      props: { post, related: getRelatedPosts(post, posts) },
    };
  });
}

const { post, related } = Astro.props;

const imgUrl = post.meta.image?.url || post.cover?.url;

const ogImageUrl = imgUrl
  ? new URL(`cdn/${imgUrl.split("/").pop()}`, dns.getDns()).pathname
  : "/assets/images/meta/og/home.png";
---

<BaseLayout>
  <Seo
    slot="seo"
    title={post.meta.title}
    description={post.meta.description}
    og={{
      image: ogImageUrl,
      imageAlt: post.meta.image?.alt,
    }}
  />
  <style slot="header" is:inline set:html={styles}></style>
  <BlogPost
    structured={"BlogPosting"}
    type={Api.Blog}
    post={post}
    related={related}
  />
  <Fragment slot="footer">
    <script src="../../scripts/blog/slug.js"></script>
  </Fragment>
</BaseLayout>
