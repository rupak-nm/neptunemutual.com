---
import SocialShare from "../elements/SocialShare.astro";
import Tags from "../elements/Tags.astro";

import { slugify } from "../../util/slug";
import { toTagsWithHref } from "../../util/tag";
import { BlogOrPressroom } from "../../types/enum";

const t = (x:string):string=>x;

interface Props {
  type: BlogOrPressroom
  title: string 
  intro: string 
  toc: TableOfContentEntry[]
  html: string
  tags?: Tag[]
  pageUrl: string
  showSocial: boolean
}

const { type, title, intro, toc, html, tags, pageUrl, showSocial } = Astro.props
---

<div class="content viewer full width container">
  <div class="sidebar">
    <div class="table of contents container">
      <p class="label">{t('Table of Contents')}</p>
      <a class="active title item" href={'#' + slugify(title)}>{title}</a>

      {
        toc?.length
          ? (
            <div class="content">
              {
                toc.map((e) => (
                  <div class="header">
                    <a class={`item`}
                    style={`margin-left: ${(e.type || 2) * 8}px`}
                      href={`#${e.id || ''}`}
                    >
                      <span>{e.text}</span>
                    </a>
                  </div>
                ))
            }
            </div>
            )
          : <></>
      }

    </div>

  </div>

  <div class="content wrapper">
    <slot name="pre" />

    <div class="article" set:html={html}></div>       

    <div class="author">
      By
      <span itemprop="author" itemscope itemtype="https://schema.org/Organization">
        <span itemprop="name">Neptune Mutual</span>
        <span itemprop="url" content="https://neptunemutual.com"></span>
      </span>  
    </div>
    <Tags tags={toTagsWithHref(type, tags)}  showAll />

    {showSocial &&  <SocialShare title={title} intro={intro} pageUrl={pageUrl} />}
    <slot name="post" />
  </div>
</div>